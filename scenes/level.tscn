[gd_scene load_steps=5 format=3 uid="uid://dix54pcanheeh"]

[ext_resource type="Script" path="res://scenes/level.gd" id="1_aer3t"]
[ext_resource type="Script" path="res://scenes/RandomLevelGenerator.gd" id="2_cm3nc"]

[sub_resource type="Curve2D" id="Curve2D_57smi"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, -50, 550, 0, 0, 0, 0, 550, 550, 0, 0, 0, 0, 550, 350, 0, 0, 0, 0, 950, 350, 0, 0, 0, 0, 950, 550, 0, 0, 0, 0, 1350, 550, 0, 0, 0, 0, 1350, 450, 0, 0, 0, 0, 550, 450, 0, 0, 0, 0, 250, 450, 0, 0, 0, 0, 250, 650, 0, 0, 0, 0, 1650, 650)
}
point_count = 11

[sub_resource type="GDScript" id="GDScript_vy5vq"]
resource_name = "MainPath"
script/source = "extends Path2D

var points : Array[Vector2] = []
var angle1 : int
var angle2 : int
var textureNode : TextureBloc
var distance : int
var i_sup : int

var texture_array : Array[TextureBloc] = []

var rlg : RandomLevelGenerator

func _enter_tree():
	
	print(\"Entered tree.\")
	
	rlg = $\"../RandomLevelGenerator\"
	rlg.difficulty = $\"..\".difficulty
	
	curve = rlg._calculate_random_path()
	
	print(curve.get_point_position(curve.point_count - 1))
	
	_fill_path()
	
func _fill_path():
	
	# Get points in the curve
	for i in curve.get_point_count() :
		points.append(curve.get_point_position(i))
		
	# Fill out path
	i_sup = len(points) - 1
	distance = abs(points[i_sup].distance_to(points[i_sup-1]))/100 - 1
	
	for j in range(0, distance) :
		textureNode = TextureBloc.new()
		self.add_child(textureNode)
		textureNode.pivot_offset = Vector2(50,50)
		textureNode.size = Vector2(100,100)
		textureNode.position = points[i_sup] + (points[i_sup-1]-points[i_sup]).normalized()*(j+1)*100
		textureNode.is_corner = false
		if (points[i_sup]-points[i_sup-1]).normalized() == Vector2.UP or (points[i_sup]-points[i_sup-1]).normalized() == Vector2.DOWN :
			textureNode.rotation = PI/2
		texture_array.push_front(textureNode)
		textureNode._update()
	
	for i in range(len(points)-2, 0, -1) :
		
		# Fill out corner
		angle1 = (points[i]-points[i-1]).angle() /(PI/2)
		angle2 = (points[i]-points[i+1]).angle() /(PI/2)
		
		textureNode = TextureBloc.new()
		self.add_child(textureNode)
		textureNode.size = Vector2(100,100)
		textureNode.position = points[i]
		textureNode.pivot_offset = Vector2(50,50)
		textureNode.is_corner = true
		texture_array.push_front(textureNode)
		textureNode._update()
		
		match angle1:
			0:
				if angle2 == 1 :
					textureNode.rotation = PI/2
			1:
				if angle2 == 0 :
					textureNode.rotation = PI/2
				else :
					textureNode.rotation = PI
			2:
				if angle2 == 1 :
					textureNode.rotation = PI
				else :
					textureNode.rotation = -PI/2
			-1:
				if angle2 == 2 :
					textureNode.rotation = -PI/2
		
		# Fill rest of path
		distance = abs(points[i].distance_to(points[i-1]))/100 - 1
		
		for j in range(0, distance) :
			textureNode = TextureBloc.new()
			self.add_child(textureNode)
			textureNode.pivot_offset = Vector2(50,50)
			textureNode.size = Vector2(100,100)
			textureNode.position = points[i] + (points[i-1]-points[i]).normalized()*(j+1)*100
			textureNode.is_corner = false
			if (points[i]-points[i-1]).normalized() == Vector2.UP or (points[i]-points[i-1]).normalized() == Vector2.DOWN :
				textureNode.rotation = PI/2
			texture_array.push_front(textureNode)
			textureNode._update()
		
	textureNode = TextureBloc.new()
	self.add_child(textureNode)
	textureNode.size = Vector2(100,100)
	textureNode.position = points[0]
	textureNode.is_corner = false
	texture_array.push_front(textureNode)
	textureNode._update()
	
func _hide_path(node : int, progress : float) -> void:
	var nodes_passed : int = 1
	
	var last_corner := 0
	var i := 0
	while node >= nodes_passed :
		if texture_array[i].is_corner :
			if nodes_passed - node == 0 :
				for j in range(last_corner, last_corner + floorf((i-last_corner)*progress)+1) :
					texture_array[j]._goodbye()
			else :
				for j in range(last_corner, i) :
					texture_array[j]._goodbye()
			last_corner = i
			nodes_passed += 1
			i += 1
		else :
			i += 1
"

[node name="level" type="Node2D"]
script = ExtResource("1_aer3t")
difficulty = 10

[node name="Path2D" type="Path2D" parent="."]
position = Vector2(0, -100)
curve = SubResource("Curve2D_57smi")
script = SubResource("GDScript_vy5vq")

[node name="PathFollow2D" type="PathFollow2D" parent="Path2D"]
position = Vector2(106.398, 550)
progress = 156.4

[node name="RandomLevelGenerator" type="Node" parent="."]
script = ExtResource("2_cm3nc")
